angular.module("spicyTaste",["ngRoute","angular-md5","ngMaterial","ngAnimate","ngMessages"]).constant("CONSTANTS",{FB_APP_ID:0x58e0e66b31adc,FACEBOOK:"FB",EMAIL:"EMAIL",SOCIAL_PASS:"PASSWORD",LOCAL_STORAGE_KEY:"spicyTasteUser",LATEST_COUNT:10}),angular.module("spicyTaste").config(["$mdThemingProvider","$mdIconProvider",function(e,t){var n=e.extendPalette("deep-orange",{500:"f27242"}),o=e.extendPalette("blue",{500:"6984b4",600:"6984b4"});e.definePalette("primaryOrange",n),e.definePalette("primaryBlue",o),e.theme("default").primaryPalette("primaryOrange").accentPalette("light-green"),e.theme("blue").primaryPalette("primaryBlue"),t.icon("menu","svg/ic_menu_24px.svg").icon("share","svg/ic_share_48px.svg").icon("login","svg/ic_account_circle_24px.svg").icon("recipes","svg/ic_event_note_48px.svg").icon("restaurants","svg/ic_restaurant_menu_48px.svg").icon("ingredients","svg/ic_receipt_48px.svg").icon("arrow","svg/ic_arrow_drop_up_48px.svg").icon("more","svg/ic_more_24px.svg").icon("time1","svg/ic_av_timer_24px.svg").icon("time2","svg/ic_access_time_24px.svg").icon("difficulty","svg/ic_track_changes_24px.svg").icon("exit","svg/ic_exit_to_app_48px.svg").icon("photo","svg/ic_mms_24px.svg").icon("check","svg/ic_check_circle_24px.svg").icon("facebook","svg/facebook.svg").icon("twitter","svg/twitter.svg").icon("pinterest","svg/pinterest.svg").icon("comments","svg/ic_chat_48px.svg")}]),angular.module("spicyTaste").run(["$rootScope","$window","UserService","CONSTANTS",function(e,t,n,o){e.user=null,t.fbAsyncInit=function(){FB.init({appId:o.FB_APP_ID,cookie:!0,xfbml:!0,version:"v2.2"})},function(e,t,n){var o,i=e.getElementsByTagName(t)[0];e.getElementById(n)||(o=e.createElement(t),o.id=n,o.src="//connect.facebook.net/en_US/sdk.js",i.parentNode.insertBefore(o,i))}(document,"script","facebook-jssdk")}]),angular.module("spicyTaste").config(["$locationProvider","$routeProvider",function(e,t){e.html5Mode(!0),t.when("/",{templateUrl:"ng/views/pages/home.html",controller:"HomeController",controllerAs:"home"}).when("/dishes",{templateUrl:"ng/views/pages/dish/all.html",controller:"DishListController",controllerAs:"dishList"}).when("/dishes/:dish_id",{templateUrl:"ng/views/pages/dish/detail.html",controller:"DishDetailController",controllerAs:"detail"}).when("/admin/dishes/list",{templateUrl:"ng/views/pages/admin/dish/list.html",controller:"DishListController",controllerAs:"dishList"}).when("/admin/dishes/create",{templateUrl:"ng/views/pages/admin/dish/single.html",controller:"DishCreateController",controllerAs:"dishManage"}).when("/admin/dishes/:dish_id",{templateUrl:"ng/views/pages/admin/dish/single.html",controller:"DishEditController",controllerAs:"dishManage"}).when("/login",{templateUrl:"ng/views/pages/user/login.html",controller:"LoginController",controllerAs:"login"}).when("/me",{templateUrl:"ng/views/pages/user/me.html",controller:"ProfileController",controllerAs:"me"})}]),angular.module("spicyTaste").controller("DishListController",["DishService","SocialService","$location",function(e,t,n){var o=this;o.processing=!0,e.all().success(function(e){o.processing=!1,o.dishes=e}),o.deleteDish=function(t){o.processing=!0,e["delete"](t).success(function(t){e.all().success(function(e){o.processing=!1,o.dishes=e})})},o.addDish=function(){o.processing=!0,e.create({name:"new dish"}).success(function(e){n.path("/admin/dish/"+e.dish._id)})},o.fbShare=function(e){var o=n.absUrl()+"/"+e._id;t.fbShare(o)}}]).controller("DishDetailController",["$scope","$location","$rootScope","$routeParams","$mdDialog","DishService","UserService",function(e,t,n,o,i,s,r){function c(){}function a(e,t,n){i.show({targetEvent:t,clickOutsideToClose:!0,templateUrl:"ng/views/dialogs/comment.html",locals:{title:e},controller:l,controllerAs:"comment"}).then(function(e){s.addComment(u.dish._id,{content:e,replyTo:n}).success(function(e){u.dish.comments.push(e)})})}function l(e,t){var n=this;n.content="",n.title=e,n.closeDialog=function(){t.cancel()},n.submit=function(){""==n.content.trim()?t.cancel():t.hide(n.content)}}var u=this;u.dish={},c(),s.get(o.dish_id).success(function(e){u.dish=e,u.dish.isCollected=n.user&&n.user.favouriteDishes.indexOf(u.dish._id)>=0?!0:!1}),u.reply=function(e,t){var n="@"+e.userName;a(n,t,e._id)},u.collect=function(){if(!n.user){var e=t.url();return t.path("/login").search({returnUrl:e})}r.collect(u.dish._id).then(function(e){console.log("UserService.collect:",e),e.success&&(u.dish.isCollected=!0)})},u.showInstructionPhoto=function(e,t){null!=e&&""!=e.trim()&&i.show({targetEvent:t,clickOutsideToClose:!0,template:'<md-dialog>  <md-dialog-content><img src="{{photo}}"></md-dialog-content></md-dialog>',controller:["$scope",function(t){t.photo=e}]})},u.newComment=function(e){a("Comment",e,null)},l.$inject=["title","$mdDialog"]}]).controller("DishCreateController",["$location","DishService",function(e,t){var n=this;n.dish={name:"new dish"},n.save=function(){n.processing=!0,t.create(n.dish).success(function(t){e.path("/admin/dish/"+t.dish._id)})}}]).controller("DishEditController",["$routeParams","DishService","$location",function(e,t,n){function o(){i.newPhoto="",i.newInstruction="",i.message="",i.processing=!1}var i=this;o(),t.get(e.dish_id).success(function(e){i.dish=e}),i.addInstruction=function(){i.dish.instructions.push(i.newInstruction),i.newInstruction=""},i.removeInstruction=function(e){i.dish.instructions.splice(e,1)},i.addPhoto=function(){console.log("newPhoto: ",i.newPhoto),i.dish.photos.push(i.newPhoto),console.log("dish:",i.dish),i.newPhoto=""},i.removePhoto=function(e){i.dish.photos.splice(e,1)},i.save=function(){i.processing=!0,t.update(e.dish_id,i.dish).success(function(e){o(),i.message=e.message})}}]),angular.module("spicyTaste").controller("HomeController",["DishService","CONSTANTS",function(e,t){function n(){i.recipeTiles=[],o()}function o(){e.limit(t.LATEST_COUNT).success(function(e){angular.forEach(e,function(e,t){var n={image:e.imageUrl,title:e.name,id:e._id,prepTime:e.prepTime,totalTime:e.totalTime,difficulty:e.difficulty,tags:e.tags,span:{row:1,col:1}};switch(t+1){case 1:n.span.row=n.span.col=2;break;case 2:case 3:break;case 4:n.span.col=2;case 5:case 6:break;case 7:n.span.row=n.span.col=2;case 8:case 9:break;case 10:n.span.col=2}i.recipeTiles.push(n)})})}var i=this;n()}]),angular.module("spicyTaste").controller("MainController",["$rootScope","$location","$mdDialog","$http","SessionService","UserService","CONSTANTS",function(e,t,n,o,i,s,r){function c(e){var t=o.defaults.headers.common["X-Auth"];i.setLocal(r.LOCAL_STORAGE_KEY,t),n.hide(e)}function a(){l.showMobileMenu=!1,l.email="",l.password="",l.userName="";var t=i.getLocal(r.LOCAL_STORAGE_KEY);t&&(o.defaults.headers.common["X-Auth"]=t,s.get().then(function(t){e.currentUser=t}))}var l=this;a(),l.toggleMobileMenu=function(){l.showMobileMenu=!l.showMobileMenu},l.showLoginDialog=function(t){n.show({clickOutsideToClose:!0,templateUrl:"ng/views/dialogs/login.html",targetEvent:t,controller:"MainController",controllerAs:"main"}).then(function(t){e.currentUser=t})},l.fbLogin=function(){FB.login(function(e){"connected"===e.status?FB.api("/me",function(e){var t={userName:e.name,email:e.email,password:r.SOCIAL_PASS,photoUrl:"http://graph.facebook.com/"+e.id+"/picture?type=large",linkedSocial:r.FACEBOOK};s.socialLogin(t).then(function(e){e.loginType=r.FACEBOOK,c(e)})}):"not_authorized"===e.status},{scope:"public_profile,email"})},l.login=function(){s.login(l.email,l.password).then(function(e){e.loginType=r.EMAIL,c(e)})},l.signUp=function(){var e={userName:l.userName,email:l.email,password:l.password,photoUrl:"http://www.gravatar.com/avatar/"+md5.createHash(l.email),linkedSocial:r.EMAIL};s.create(e).then(function(e){e.loginType=r.EMAIL,c(e)})}}]),angular.module("spicyTaste").controller("ProfileController",["$location","$rootScope","UserService",function(e,t,n){function o(){i.user={},n.get().then(function(e){i.user=e})}var i=this;o(),i.logout=function(){n.logout(),t.currentUser=null,e.path("/")}}]),angular.module("spicyTaste").directive("contenteditable",function(){return{require:"ngModel",restrict:"A",link:function(e,t,n,o){o.$render=function(){t.html(o.$viewValue||"")},t.bind("blur",function(){e.$apply(function(){o.$setViewValue(t.html())})})}}}),angular.module("spicyTaste").directive("focusOn",function(){return{restrict:"A",scope:{focusValue:"=focusOn"},link:function(e,t){e.$watch("focusValue",function(e,n){e&&!n&&t[0].focus()})}}}),angular.module("spicyTaste").factory("DishService",["$http",function(e){var t={};return t.all=function(){return e.get("/api/dishes")},t.limit=function(t){return e.get("/api/dishes?limit="+t)},t.create=function(t){return e.post("/api/dishes",t)},t.get=function(t){return e.get("/api/dishes/"+t)},t.update=function(t,n){return e.put("/api/dishes/"+t,n)},t["delete"]=function(t){return e["delete"]("/api/dishes/"+t)},t.addComment=function(t,n){return e.post("/api/dishes/"+t+"/comments",n)},t.getDifficulties=function(){return["初学","容易","一般","较难","专业"]},t}]),angular.module("spicyTaste").factory("SessionService",["$window",function(e){var t={};return t.getLocal=function(t){if(e.localStorage){var n=e.localStorage.getItem(t);return angular.fromJson(n)}return!1},t.setLocal=function(t,n){return e.localStorage&&e.localStorage.setItem(t,angular.toJson(n))},t}]),angular.module("spicyTaste").factory("SocialService",function(){var e={};return e.fbShare=function(e){FB.ui({method:"share",href:e},function(e){})},e}),angular.module("spicyTaste").factory("UserService",["$http","$rootScope","$window","CONSTANTS",function(e,t,n,o){var i={};return i.socialLogin=function(e){return console.log("socialUser: ",e),i.searchBy("email="+e.email).then(function(t){if(t.success){var n=t.users[0];return n.linkedSocial.indexOf(e.linkedSocial)<0?(n.linkedSocial.push(e.linkedSocial),n.userName=e.userName,n.photoUrl=e.photoUrl,i.update(n).then(function(){return i.login(n.email,o.SOCIAL_PASS)})):i.login(n.email,o.SOCIAL_PASS)}return i.create(e)})},i.login=function(t,n){return e.post("/api/auth",{email:t,password:n}).then(function(t){return e.defaults.headers.common["X-Auth"]=t.data,i.get()})},i.logout=function(){delete e.defaults.headers.common["X-Auth"],n.localStorage.removeItem(o.LOCAL_STORAGE_KEY)},i.get=function(){return e.get("/api/users/me").then(function(e){return e.data})},i.searchBy=function(t){return e.get("/api/users?"+t).then(function(e){return e.data})},i.getById=function(t){return e.get("/api/users/"+t).then(function(e){return e.data})},i.create=function(t){return e.post("/api/users/",t).then(function(){return i.login(t.email,t.password)})},i.update=function(t,n){return e.put("/api/users/"+t,n).then(function(e){return e.data})},i.collect=function(n){return e.put("/api/users/"+t.user._id+"/dishes/"+n).then(function(e){return e.data})},i}]);
//# sourceMappingURL=data:application/json;base64,