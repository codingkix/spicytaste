angular.module("spicyTaste",["ngRoute"]).constant("CONSTANTS",{FB_APP_ID:0x58e0e66b31adc,FACEBOOK:"FB",EMAIL:"EMAIL",SOCIAL_PASS:"PASSWORD"}),angular.module("spicyTaste").run(["$rootScope","$window","UserService","CONSTANTS",function(e,n,t,o){e.user=null,n.fbAsyncInit=function(){FB.init({appId:o.FB_APP_ID,cookie:!0,xfbml:!0,version:"v2.2"})},function(e,n,t){var o,i=e.getElementsByTagName(n)[0];e.getElementById(t)||(o=e.createElement(n),o.id=t,o.src="//connect.facebook.net/en_US/sdk.js",i.parentNode.insertBefore(o,i))}(document,"script","facebook-jssdk")}]),angular.module("spicyTaste").config(["$locationProvider","$routeProvider",function(e,n){e.html5Mode(!0),n.when("/",{templateUrl:"ng/views/pages/home.html",controller:"HomeController",controllerAs:"home"}).when("/dishes",{templateUrl:"ng/views/pages/dish/list.html",controller:"DishListController",controllerAs:"dishList"}).when("/dishes/:dish_id",{templateUrl:"ng/views/pages/dish/detail.html",controller:"DishDetailController",controllerAs:"detail"}).when("/admin/dishes/create",{templateUrl:"ng/views/pages/admin/dish/single.html",controller:"DishCreateController",controllerAs:"dishManage"}).when("/admin/dishes/:dish_id",{templateUrl:"ng/views/pages/admin/dish/single.html",controller:"DishEditController",controllerAs:"dishManage"}).when("/login",{templateUrl:"ng/views/pages/user/login.html",controller:"LoginController",controllerAs:"login"})}]),angular.module("spicyTaste").controller("DishListController",["DishService",function(e){var n=this;n.processing=!0,e.all().success(function(e){n.processing=!1,n.dishes=e}),n.deleteDish=function(t){n.processing=!0,e["delete"](t).success(function(){e.all().success(function(e){n.processing=!1,n.dishes=e})})}}]).controller("DishDetailController",["$location","$rootScope","$routeParams","DishService",function(e,n,t,o){var i=this;i.dish=null,i.content="",o.get(t.dish_id).success(function(e){i.dish=e}),i.addComment=function(){return n.user?(o.addComment(i.dish._id,{content:i.content}).success(function(e){i.dish.comments.push(e)}),void(i.content="")):e.path("/login")}}]).controller("DishCreateController",["DishService",function(e){var n=this;n.type="create",n.save=function(){n.processing=!0,n.message="",e.create(n.dish).success(function(e){n.processing=!1,n.dish={},n.message=e.message})}}]).controller("DishEditController",["$routeParams","DishService",function(e,n){var t=this;t.type="edit",n.get(e.dish_id).success(function(e){t.dish=e}),t.save=function(){t.processing=!0,t.message="",n.update(e.dish_id,t.dish).success(function(e){t.processing=!1,t.dish={},t.message=e.message})}}]),angular.module("spicyTaste").controller("HomeController",function(){}),angular.module("spicyTaste").controller("LoginController",["$scope","UserService","$location","CONSTANTS",function(e,n,t,o){var i=this;i.email="",i.password="",i.showSignUpForm=!1,i.fbLogin=function(){FB.login(function(i){"connected"===i.status?FB.api("/me",function(i){n.socialLogin(i.email,o.FACEBOOK).then(function(n){n.loginType=o.FACEBOOK,e.$emit("login",n),t.path("/")})}):"not_authorized"===i.status},{scope:"public_profile,email"})},i.login=function(){n.login(i.email,i.password).then(function(n){n.loginType=o.EMAIL,e.$emit("login",n),t.path("/")})},i.signUp=function(){var s={email:i.email,password:i.password,social:o.EMAIL};n.create(s).then(function(n){e.$emit("login",n),t.path("/")})}}]),angular.module("spicyTaste").controller("MainController",["$scope","$rootScope","UserService","CONSTANTS",function(e,n,t,o){var i=this;e.$on("login",function(e,t){n.user=i.currentUser=t}),i.logout=function(){i.currentUser.loginType==o.FACEBOOK&&FB.logout(function(){}),i.currentUser=null,n.user=null,t.logout()}}]),angular.module("spicyTaste").factory("DishService",["$http",function(e){var n={};return n.all=function(){return e.get("/api/dishes")},n.create=function(n){return e.post("/api/dishes",n)},n.get=function(n){return e.get("/api/dishes/"+n)},n.update=function(n,t){return e.put("/api/dishes/"+n,t)},n["delete"]=function(n){return e["delete"]("/api/dishes/"+n)},n.addComment=function(n,t){return e.post("/api/dishes/"+n+"/comments",t)},n}]),angular.module("spicyTaste").factory("UserService",["$http","CONSTANTS",function(e,n){var t={};return t.socialLogin=function(e,o){return t.getByEmail(e).then(function(i){if(console.log("getByEmail: ",i),i.success){var s=i.user;return s.linkedSocial.indexOf(o)<0?(s.linkedSocial.push(o),t.update(s).then(function(){return t.login(s.email,n.SOCIAL_PASS)})):t.login(s.email,n.SOCIAL_PASS)}var r={email:e,password:n.SOCIAL_PASS,social:o};return t.create(r)})},t.login=function(n,o){return e.post("/api/auth",{email:n,password:o}).then(function(n){return e.defaults.headers.common["X-Auth"]=n.data,t.get()})},t.logout=function(){delete e.defaults.headers.common["X-Auth"]},t.get=function(){return e.get("/api/users/me").then(function(e){return e.data})},t.getByEmail=function(n){return e.get("/api/users/"+n).then(function(e){return e.data})},t.create=function(n){return e.post("/api/users/",n).then(function(){return t.login(n.email,n.password)})},t.update=function(n,t){return e.put("/api/users/"+n,t).then(function(e){return e.data})},t}]);
//# sourceMappingURL=data:application/json;base64,